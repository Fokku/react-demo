{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar errors_1 = require(\"@ledgerhq/errors\");\n\nvar Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  var b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nvar initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0\n};\n/**\n *\n */\n\nvar createHIDframing = function (channel, packetSize) {\n  return {\n    makeBlocks: function (apdu) {\n      var data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      var blockSize = packetSize - 5;\n      var nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([data, Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0)]);\n      var blocks = [];\n\n      for (var i = 0; i < nbBlocks; i++) {\n        var head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        var chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n    reduceResponse: function (acc, chunk) {\n      var _a = acc || initialAcc,\n          data = _a.data,\n          dataLength = _a.dataLength,\n          sequence = _a.sequence;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new errors_1.TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new errors_1.TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new errors_1.TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      var chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data: data,\n        dataLength: dataLength,\n        sequence: sequence\n      };\n    },\n    getReducedResult: function (acc) {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    }\n  };\n};\n\nexports[\"default\"] = createHIDframing;","map":{"version":3,"sources":["../src/hid-framing.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar errors_1 = require(\"@ledgerhq/errors\");\nvar Tag = 0x05;\nfunction asUInt16BE(value) {\n    var b = Buffer.alloc(2);\n    b.writeUInt16BE(value, 0);\n    return b;\n}\nvar initialAcc = {\n    data: Buffer.alloc(0),\n    dataLength: 0,\n    sequence: 0\n};\n/**\n *\n */\nvar createHIDframing = function (channel, packetSize) {\n    return {\n        makeBlocks: function (apdu) {\n            var data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n            var blockSize = packetSize - 5;\n            var nbBlocks = Math.ceil(data.length / blockSize);\n            data = Buffer.concat([\n                data,\n                Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n            ]);\n            var blocks = [];\n            for (var i = 0; i < nbBlocks; i++) {\n                var head = Buffer.alloc(5);\n                head.writeUInt16BE(channel, 0);\n                head.writeUInt8(Tag, 2);\n                head.writeUInt16BE(i, 3);\n                var chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n                blocks.push(Buffer.concat([head, chunk]));\n            }\n            return blocks;\n        },\n        reduceResponse: function (acc, chunk) {\n            var _a = acc || initialAcc, data = _a.data, dataLength = _a.dataLength, sequence = _a.sequence;\n            if (chunk.readUInt16BE(0) !== channel) {\n                throw new errors_1.TransportError(\"Invalid channel\", \"InvalidChannel\");\n            }\n            if (chunk.readUInt8(2) !== Tag) {\n                throw new errors_1.TransportError(\"Invalid tag\", \"InvalidTag\");\n            }\n            if (chunk.readUInt16BE(3) !== sequence) {\n                throw new errors_1.TransportError(\"Invalid sequence\", \"InvalidSequence\");\n            }\n            if (!acc) {\n                dataLength = chunk.readUInt16BE(5);\n            }\n            sequence++;\n            var chunkData = chunk.slice(acc ? 5 : 7);\n            data = Buffer.concat([data, chunkData]);\n            if (data.length > dataLength) {\n                data = data.slice(0, dataLength);\n            }\n            return {\n                data: data,\n                dataLength: dataLength,\n                sequence: sequence\n            };\n        },\n        getReducedResult: function (acc) {\n            if (acc && acc.dataLength === acc.data.length) {\n                return acc.data;\n            }\n        }\n    };\n};\nexports[\"default\"] = createHIDframing;\n//# sourceMappingURL=hid-framing.js.map"]},"metadata":{},"sourceType":"script"}