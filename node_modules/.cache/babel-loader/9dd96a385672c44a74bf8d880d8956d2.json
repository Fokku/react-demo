{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from './Button';\nimport { WalletIcon } from './WalletIcon';\nexport const WalletConnectButton = _a => {\n  var {\n    children,\n    disabled,\n    onClick\n  } = _a,\n      props = __rest(_a, [\"children\", \"disabled\", \"onClick\"]);\n\n  const {\n    wallet,\n    connect,\n    connecting,\n    connected\n  } = useWallet();\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) connect().catch(() => {});\n  }, [onClick, connect]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, Object.assign({\n    className: \"wallet-adapter-button-trigger\",\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: wallet ? React.createElement(WalletIcon, {\n      wallet: wallet\n    }) : undefined,\n    onClick: handleClick\n  }, props), content);\n};","map":{"version":3,"sources":["../src/WalletConnectButton.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAT,QAA0B,8BAA1B;AACA,OAAO,KAAP,IAAuC,WAAvC,EAAoD,OAApD,QAAmE,OAAnE;AACA,SAAS,MAAT,QAAoC,UAApC;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA,OAAO,MAAM,mBAAmB,GAAqB,EAAD,IAA8C;MAA7C;AAAE,IAAA,QAAF;AAAY,IAAA,QAAZ;AAAsB,IAAA;AAAtB,MAA6B,E;MAAK,KAAK,GAAA,MAAA,CAAA,EAAA,EAAvC,CAAA,UAAA,EAAA,UAAA,EAAA,SAAA,CAAuC,C;;AACxF,QAAM;AAAE,IAAA,MAAF;AAAU,IAAA,OAAV;AAAmB,IAAA,UAAnB;AAA+B,IAAA;AAA/B,MAA6C,SAAS,EAA5D;AAEA,QAAM,WAAW,GAAyC,WAAW,CAChE,KAAD,IAAU;AACN,QAAI,OAAJ,EAAa,OAAO,CAAC,KAAD,CAAP,CADP,CAEN;;AACA,QAAI,CAAC,KAAK,CAAC,gBAAX,EAA6B,OAAO,GAAG,KAAV,CAAgB,MAAK,CAAG,CAAxB;AAChC,GALgE,EAMjE,CAAC,OAAD,EAAU,OAAV,CANiE,CAArE;AASA,QAAM,OAAO,GAAG,OAAO,CAAC,MAAK;AACzB,QAAI,QAAJ,EAAc,OAAO,QAAP;AACd,QAAI,UAAJ,EAAgB,OAAO,gBAAP;AAChB,QAAI,SAAJ,EAAe,OAAO,WAAP;AACf,QAAI,MAAJ,EAAY,OAAO,SAAP;AACZ,WAAO,gBAAP;AACH,GANsB,EAMpB,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,MAAlC,CANoB,CAAvB;AAQA,SACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,MAAA,CAAA,MAAA,CAAA;AACH,IAAA,SAAS,EAAC,+BADP;AAEH,IAAA,QAAQ,EAAE,QAAQ,IAAI,CAAC,MAAb,IAAuB,UAAvB,IAAqC,SAF5C;AAGH,IAAA,SAAS,EAAE,MAAM,GAAG,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,MAAA,MAAM,EAAE;AAAT,KAAX,CAAH,GAAoC,SAHlD;AAIH,IAAA,OAAO,EAAE;AAJN,GAAA,EAKC,KALD,CAAP,EAOK,OAPL,CADJ;AAWH,CA/BM","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from './Button';\nimport { WalletIcon } from './WalletIcon';\nexport const WalletConnectButton = (_a) => {\n    var { children, disabled, onClick } = _a, props = __rest(_a, [\"children\", \"disabled\", \"onClick\"]);\n    const { wallet, connect, connecting, connected } = useWallet();\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented)\n            connect().catch(() => { });\n    }, [onClick, connect]);\n    const content = useMemo(() => {\n        if (children)\n            return children;\n        if (connecting)\n            return 'Connecting ...';\n        if (connected)\n            return 'Connected';\n        if (wallet)\n            return 'Connect';\n        return 'Connect Wallet';\n    }, [children, connecting, connected, wallet]);\n    return (React.createElement(Button, Object.assign({ className: \"wallet-adapter-button-trigger\", disabled: disabled || !wallet || connecting || connected, startIcon: wallet ? React.createElement(WalletIcon, { wallet: wallet }) : undefined, onClick: handleClick }, props), content));\n};\n//# sourceMappingURL=WalletConnectButton.js.map"]},"metadata":{},"sourceType":"module"}