{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport function poll(callback, interval, count) {\n  if (count > 0) {\n    setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n      const done = yield callback();\n      if (!done) poll(callback, interval, count - 1);\n    }), interval);\n  }\n}\nexport function pollUntilReady(adapter, pollInterval, pollCount) {\n  poll(() => {\n    const {\n      ready\n    } = adapter;\n\n    if (ready) {\n      if (!adapter.emit('ready')) {\n        console.warn(`${adapter.constructor.name} is ready but no listener was registered`);\n      }\n    }\n\n    return ready;\n  }, pollInterval, pollCount);\n}","map":{"version":3,"sources":["../src/poll.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAM,SAAU,IAAV,CAAe,QAAf,EAA2D,QAA3D,EAA6E,KAA7E,EAA0F;AAC5F,MAAI,KAAK,GAAG,CAAZ,EAAe;AACX,IAAA,UAAU,CAAC,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAClB,YAAM,IAAI,GAAG,MAAM,QAAQ,EAA3B;AACA,UAAI,CAAC,IAAL,EAAW,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,KAAK,GAAG,CAA7B,CAAJ;AACd,KAHqB,CAAZ,EAGP,QAHO,CAAV;AAIH;AACJ;AAED,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAAiD,YAAjD,EAAuE,SAAvE,EAAwF;AAC1F,EAAA,IAAI,CACA,MAAK;AACD,UAAM;AAAE,MAAA;AAAF,QAAY,OAAlB;;AACA,QAAI,KAAJ,EAAW;AACP,UAAI,CAAC,OAAO,CAAC,IAAR,CAAa,OAAb,CAAL,EAA4B;AACxB,QAAA,OAAO,CAAC,IAAR,CAAa,GAAG,OAAO,CAAC,WAAR,CAAoB,IAAI,0CAAxC;AACH;AACJ;;AACD,WAAO,KAAP;AACH,GATD,EAUA,YAVA,EAWA,SAXA,CAAJ;AAaH","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function poll(callback, interval, count) {\n    if (count > 0) {\n        setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            const done = yield callback();\n            if (!done)\n                poll(callback, interval, count - 1);\n        }), interval);\n    }\n}\nexport function pollUntilReady(adapter, pollInterval, pollCount) {\n    poll(() => {\n        const { ready } = adapter;\n        if (ready) {\n            if (!adapter.emit('ready')) {\n                console.warn(`${adapter.constructor.name} is ready but no listener was registered`);\n            }\n        }\n        return ready;\n    }, pollInterval, pollCount);\n}\n//# sourceMappingURL=poll.js.map"]},"metadata":{},"sourceType":"module"}